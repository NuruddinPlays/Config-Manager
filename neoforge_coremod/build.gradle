plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

configurations {
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

base {
    archivesName = "CrashAssistant-neoforge-1.21.5-1.21.8"
}

dependencies {
    shadowBundle 'com.electronwill.night-config:toml:3.6.4'
    shadowBundle 'com.electronwill.night-config:json:3.6.4'
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier.set('dev-shadow')
    relocate 'com.electronwill.nightconfig', 'dev.kostromdan.mods.crash_assistant.nightconfig'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn(':neoforge:build')
    from(project(':neoforge').tasks.jar) {
        rename { "crash_assistant-neoforge.jar" }
        into 'META-INF/jarjar'
    }
    from(zipTree(project(':neoforge').tasks.jar.archiveFile.get().asFile)) {
        include 'META-INF/neoforge.mods.toml'
        into ''
    }
    exclude("crash_assistant.mixins.json")
    exclude("crash_assistant.neoforge.mixins.json")
    exclude("dev/kostromdan/mods/crash_assistant/neoforge/**")
    exclude("dev/kostromdan/mods/crash_assistant/common/**")
}

neoForge {
    version = neoforge_version
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            clientData()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

unifiedPublishing {
    project {
        gameVersions = [
                "1.21.5",
                "1.21.6",
                "1.21.7",
                "1.21.8"
        ]
        gameLoaders = ["neoforge"]

        displayName = tasks.jar.archiveFile.get().asFile.name
        version = project.version
        releaseType = release_type

        mainPublication tasks.jar

        var cfToken = System.getenv("CF_TOKEN")
        if (cfToken != null) {
            curseforge {
                token = cfToken
                id = "1154099"
            }
        }

        var mrToken = System.getenv("MODRINTH_TOKEN")
        if (mrToken != null) {
            modrinth {
                token = mrToken
                id = "ix1qq8Ux"
            }
        }
    }
}